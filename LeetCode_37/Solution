21 / 58 testcases passed

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int longestZigZag(TreeNode root) {
        if(root.right == null && root.left == null){
            return 0;
        }
        return Math.max(longest(root.left, "right") , longest(root.right, "left"));

    }
    public int longest(TreeNode root , String side){
        if(root == null){
            return 0;
        }
        if(root.right == null && root.left == null){
            return 1;
        }
        if(side == "right"){
            return Math.max(1 + longest(root.right , "left") , longest(root.left , "right"));
        }
        else if(side == "left"){
            return Math.max(1 + longest(root.left, "right") , longest(root.right, "left"));
        }
        return 0;
    }
}
