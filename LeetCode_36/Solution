/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int pathSum(TreeNode root, int targetSum) {
        HashMap<Integer , Integer> map = new HashMap();
        map.put(0,1);
        return pathSum2(root , 0 , targetSum , map);
    }

    public int pathSum2(TreeNode root , int runningsum , int target , HashMap<Integer , Integer> map){
        if(root == null){
            return 0;
        }
        runningsum += root.val;
        int count = map.getOrDefault(runningsum-target,0);
        map.put(runningsum , map.getOrDefault(runningsum,0)+1);

        count += pathSum2(root.left , runningsum , target , map) + pathSum2(root.right, runningsum , target , map);
        map.put(runningsum , map.get(runningsum) - 1);
        return count;
    }
}
